@using Application.Utilites;
@model IEnumerable<Souvenir.ViewModels.Admin.Orders.DetailsViewModel>
@{
    Layout = null;
    Status status = ViewBag.Status;

}




<div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title">جزئیات</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">

            <table class="table">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.ProductName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ProductAmount)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ProductPrice)
                        </th>

                   

                    </tr>
                </thead>

                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @item.ProductName
                            </td>
                            <td>
                                @item.ProductAmount
                            </td>
                            <td>
                                @item.ProductPrice.ToToman()
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <div class="d-flex">
                <button type="button" data-bs-dismiss="modal" class="btn btn-primary m-3">بستن</button>
              

                @switch (status)
                {
                    case Status.Registered:
                        {
                            using (Ajax.BeginForm("ConfirmOrder", routeValues: new { IsAjax = true }, new AjaxOptions { HttpMethod = "Post", UpdateTargetId = "table-body", OnComplete = "UpdateTable()" }, new { @class = "m-0 p-0" }))
                            {
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="OrderId" id="OrderId" value="@ViewBag.OrderId" />
                                <input type="submit" class="btn btn-warning" value="تایید سفارش" />

                            }
                            break;
                        }

                    case Status.InProgress:
                        {
                            using (Ajax.BeginForm("SendConfirm", routeValues: new { IsAjax = true }, new AjaxOptions { HttpMethod = "Post", UpdateTargetId = "table-body", OnComplete = "UpdateTable()" }, new { @class = "m-0 p-0" }))
                            {
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="OrderId" id="OrderId" value="@ViewBag.OrderId" />
                                <input type="submit" class="btn btn-success" value="تایید ارسال" />

                            }
                            break;
                        }
                   
                    default:
                        break;
                }



            </div>
        </div>
    </div>
</div>




